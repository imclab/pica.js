/*! pica - v0.1.0 - 2013-01-11
* https://github.com/unepwcmc/pica.js
* Copyright (c) 2013 UNEP-WCMC; */
var __bind=function(e,t){return function(){return e.apply(t,arguments)}};window.Pica={},Pica.Models={},Pica.Views={},Pica.Application=function(){function e(e){this.config=e,this.parse=__bind(this.parse,this),Pica.config=this.config,$.support.cors=!0,$.ajaxSetup({headers:{"X-Magpie-ProjectId":Pica.config.projectId}}),this.layers=[],this.fetch()}return e.prototype.newWorkspace=function(){return this.currentWorkspace=new Pica.Models.Workspace},e.prototype.fetch=function(){return $.ajax({url:""+Pica.config.magpieUrl+"/projects/"+Pica.config.projectId+".json",type:"get",success:this.parse})},e.prototype.parse=function(e){var t,n,r;r=[];for(t in e)n=e[t],r.push(this[t]=n);return r},e}(),Pica.Events=function(){function e(){}return e.prototype.on=function(e,t){var n;return this.events||(this.events={}),(n=this.events)[e]||(n[e]=[]),this.events[e].push(t)},e.prototype.off=function(e,t){var n,r,i,s,o,u;if(this.events==null)return;if(e==null)return this.events=[];if(this.events[e]!=null){if(t!=null){o=this.events[e],u=[];for(n=i=0,s=o.length;i<s;n=++i)r=o[n],n===t?u.push(delete this.events[e][r]):u.push(void 0);return u}return delete this.events[e]}},e.prototype.trigger=function(e,t){var n,r,i,s,o;if(this.events!=null&&this.events[e]!=null){s=this.events[e],o=[];for(r=0,i=s.length;r<i;r++)n=s[r],o.push(n.apply(this,[].concat(t)));return o}},e}();var __bind=function(e,t){return function(){return e.apply(t,arguments)}},__hasProp={}.hasOwnProperty,__extends=function(e,t){function r(){this.constructor=e}for(var n in t)__hasProp.call(t,n)&&(e[n]=t[n]);return r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype,e};Pica.Model=function(e){function t(){return this["delete"]=__bind(this["delete"],this),this.fetch=__bind(this.fetch,this),this.save=__bind(this.save,this),t.__super__.constructor.apply(this,arguments)}return __extends(t,e),t.prototype.url=function(){},t.prototype.get=function(e){var t;return(t=this.attributes)==null&&(this.attributes={}),this.attributes[e]},t.prototype.set=function(e,t){var n;return(n=this.attributes)==null&&(this.attributes={}),this.attributes[e]=t,this.trigger("change")},t.prototype.sync=function(e){var t,n,r=this;return e==null&&(e={}),t=e.success||function(){},e.success=function(e,n,i){return e.id!=null&&(r.parse(e),r.trigger("sync",r)),t(r,n,i)},n=this.attributes,e.type==="post"&&(n=JSON.stringify(n)),e.type==="delete"&&(n=null),$.ajax($.extend(e,{contentType:"application/json",data:n}))},t.prototype.parse=function(e){var t,n,r;r=[];for(t in e)n=e[t],r.push(this.set(t,n));return r},t.prototype.save=function(e){return e==null&&(e={}),this.get("id")!=null?(e.url=this.url().read!=null?this.url().read:this.url(),e.type="put"):(e.url=this.url().create!=null?this.url().create:this.url(),e.type="post"),console.log("saving "+this.constructor.name+" "+this.get("id")),this.sync(e)},t.prototype.fetch=function(e){return e==null&&(e={}),e.url=this.url().read!=null?this.url().read:this.url(),console.log("fetching "+this.constructor.name+" "+this.get("id")),this.sync(e)},t.prototype["delete"]=function(e){var t,n=this;return e==null&&(e={}),e.url=this.url().read!=null?this.url().read:this.url(),e.type="delete",t=e.success,e.success=function(){return n.trigger("delete"),console.log("deleted "+n.constructor.name+" "+n.get("id")),t&&t(),n.off()},this.sync(e)},t}(Pica.Events);var __bind=function(e,t){return function(){return e.apply(t,arguments)}},__hasProp={}.hasOwnProperty,__extends=function(e,t){function r(){this.constructor=e}for(var n in t)__hasProp.call(t,n)&&(e[n]=t[n]);return r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype,e};Pica.Models.Area=function(e){function t(e){this.save=__bind(this.save,this),this.polygons=[],this.set("name","My Lovely Area")}return __extends(t,e),t.prototype.setName=function(e){return this.set("name",e)},t.prototype.addPolygon=function(e){var t=this;return e.on("requestAreaId",function(e){return t.get("id")!=null?e.success(t):t.save(e)}),e.on("sync",function(){return t.fetch()}),e.on("delete",function(){return t.fetch()}),this.polygons.push(e),this.trigger("addedPolygon",e)},t.prototype.drawNewPolygonView=function(e){return this.currentPolygon=new Pica.Models.Polygon,this.addPolygon(this.currentPolygon),new Pica.Views.NewPolygonView({callbacks:e,polygon:this.currentPolygon})},t.prototype.newShowAreaPolygonsView=function(){return new Pica.Views.ShowAreaPolygonsView({area:this})},t.prototype.url=function(){return{create:""+Pica.config.magpieUrl+"/workspaces/"+this.get("workspace_id")+"/areas_of_interest/",read:""+Pica.config.magpieUrl+"/areas_of_interest/"+this.get("id")}},t.prototype.parse=function(e){var n,r,i,s,o,u,a,f,l,c;if(e.polygons!=null){this.polygons=[],l=e.polygons;for(o=0,a=l.length;o<a;o++)i=l[o],r=new Pica.Models.Polygon({attributes:i}),this.addPolygon(r);delete e.polygons}else{s=[],c=this.polygons;for(n=u=0,f=c.length;u<f;n=++u)r=c[n],r.get("id")==null&&s.push(r);this.polygons=s}return t.__super__.parse.apply(this,arguments)},t.prototype.save=function(e){var n=this;return e||(e={}),this.get("workspace_id")!=null?t.__super__.save.call(this,e):this.trigger("requestWorkspaceId",{success:function(t,r,i){return n.set("workspace_id",t.get("id")),n.get("workspace_id")?n.save(e):e.error(n,{error:"Could not save workspace, so cannot save area"},i)}})},t}(Pica.Model);var __bind=function(e,t){return function(){return e.apply(t,arguments)}},__hasProp={}.hasOwnProperty,__extends=function(e,t){function r(){this.constructor=e}for(var n in t)__hasProp.call(t,n)&&(e[n]=t[n]);return r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype,e};Pica.Models.Polygon=function(e){function t(e){e==null&&(e={}),this.save=__bind(this.save,this),this.attributes=e.attributes!=null?e.attributes:{}}return __extends(t,e),t.prototype.isComplete=function(){return this.get("geometry")!=null},t.prototype.setGeomFromPoints=function(e){var t;return e=function(){var n,r,i;i=[];for(n=0,r=e.length;n<r;n++)t=e[n],i.push([t.lng,t.lat]);return i}(),e.push(e[0]),this.set("geometry",[[e]])},t.prototype.geomAsLatLngArray=function(){var e,t,n,r,i;e=[];if(this.isComplete()){i=this.get("geometry")[0][0];for(n=0,r=i.length;n<r;n++)t=i[n],e.push(new L.LatLng(t[1],t[0]))}return e},t.prototype.url=function(){return{read:""+Pica.config.magpieUrl+"/polygons/"+this.get("id"),create:""+Pica.config.magpieUrl+"/areas_of_interest/"+this.get("area_id")+"/polygons"}},t.prototype.save=function(e){var n=this;return e||(e={}),this.get("area_id")!=null?t.__super__.save.call(this,e):this.trigger("requestAreaId",{success:function(t,r,i){var s;n.set("area_id",t.get("id"));if(n.get("area_id"))return s=e.success,n.save(e);if(e.error!=null)return e.error(n,{error:"Could not save area, so cannot save polygon"},i)},error:function(e){return console.log("Unable to save polygon:"),console.log(e)}})},t}(Pica.Model);var __bind=function(e,t){return function(){return e.apply(t,arguments)}},__hasProp={}.hasOwnProperty,__extends=function(e,t){function r(){this.constructor=e}for(var n in t)__hasProp.call(t,n)&&(e[n]=t[n]);return r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype,e};Pica.Models.Workspace=function(e){function t(){this.save=__bind(this.save,this),this.attributes={},this.areas=[],this.currentArea=new Pica.Models.Area,this.addArea(this.currentArea)}return __extends(t,e),t.prototype.url=function(){return""+Pica.config.magpieUrl+"/workspaces"},t.prototype.addArea=function(e){return e.on("requestWorkspaceId",this.save),this.areas.push(e)},t.prototype.save=function(e){return t.__super__.save.call(this,e)},t}(Pica.Model),Pica.Views.NewPolygonView=function(){function e(e){var t=this;e.callbacks!=null&&(this.successCallback=e.callbacks.success,this.errorCallback=e.callbacks.error),this.polygon=e.polygon,this.polygonDraw=new L.Polygon.Draw(Pica.config.map,{}),this.polygonDraw.enable(),Pica.config.map.on("draw:poly-created",function(e){var n;return n=e.poly,t.createPolygon(n)})}return e.prototype.createPolygon=function(e){var t=this;return this.polygon.setGeomFromPoints(e.getLatLngs()),this.polygon.save({success:function(){t.close();if(typeof successCallback!="undefined"&&successCallback!==null)return t.successCallback()}},{error:function(e){t.close();if(typeof errorCallback!="undefined"&&errorCallback!==null)return t.errorCallback()}})},e.prototype.close=function(){return this.polygonDraw.disable(),Pica.config.map.off("draw:poly-created")},e}();var __bind=function(e,t){return function(){return e.apply(t,arguments)}},__hasProp={}.hasOwnProperty,__extends=function(e,t){function r(){this.constructor=e}for(var n in t)__hasProp.call(t,n)&&(e[n]=t[n]);return r.prototype=t.prototype,e.prototype=new r,e.__super__=t.prototype,e};Pica.Views.ShowAreaPolygonsView=function(e){function t(e){this.triggerPolyClick=__bind(this.triggerPolyClick,this),this.addPolygon=__bind(this.addPolygon,this),this.render=__bind(this.render,this),this.area=e.area,this.mapPolygons=[],this.area.on("sync",this.render),this.area.on("addedPolygon",this.addPolygon),this.render()}return __extends(t,e),t.prototype.render=function(){var e,t,n,r,i,s,o=this;this.removeAllPolygonsAndBindings(),i=this.area.polygons,s=[];for(n=0,r=i.length;n<r;n++){t=i[n];if(!t.isComplete())continue;e=(new L.Polygon(t.geomAsLatLngArray())).addTo(Pica.config.map),t.on("delete",function(){var t;return t=e,function(){return o.removeMapPolygonAndBindings(t)}}()),e.on("click",function(){var n,r;return r=t,n=e,function(e){return o.triggerPolyClick(r,e,n)}}()),s.push(this.mapPolygons.push(e))}return s},t.prototype.addPolygon=function(e){return e.on("change",this.render)},t.prototype.close=function(){return this.removeAllPolygonsAndBindings()},t.prototype.removeAllPolygonsAndBindings=function(){var e,t;t=[];while(e=this.mapPolygons.shift())t.push(this.removeMapPolygonAndBindings(e));return t},t.prototype.removeMapPolygonAndBindings=function(e){return e.off("click",this.triggerPolyClicked),Pica.config.map.removeLayer(e)},t.prototype.triggerPolyClick=function(e,t,n){return this.trigger("polygonClick",[e,t,n])},t}(Pica.Events);